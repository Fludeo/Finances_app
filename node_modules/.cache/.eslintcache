[{"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\index.tsx":"1","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\reportWebVitals.ts":"2","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\App.tsx":"3","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\login_page\\LoginPage.tsx":"4","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\LoggedPage.tsx":"5","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\login_page\\LoginForm.tsx":"6","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\login_page\\SignupForm.tsx":"7","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\NavBar.tsx":"8","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\common\\Modal.tsx":"9","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\HomePage.tsx":"10","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\CrudPage.tsx":"11","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\RecordTable.tsx":"12","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\TotalBalance.tsx":"13","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\NewRecordForm.tsx":"14","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\CrudRecordTable.tsx":"15","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\helper_functions\\formatDate.ts":"16","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\helper_functions\\toCurrency.ts":"17","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\helper_functions\\getCategories.ts":"18","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\ConfirmDeleteForm.tsx":"19","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\EditForm.tsx":"20"},{"size":674,"mtime":1669658464614,"results":"21","hashOfConfig":"22"},{"size":440,"mtime":1669658464615,"results":"23","hashOfConfig":"22"},{"size":1835,"mtime":1669658464588,"results":"24","hashOfConfig":"22"},{"size":4707,"mtime":1669658464601,"results":"25","hashOfConfig":"22"},{"size":845,"mtime":1669658464590,"results":"26","hashOfConfig":"22"},{"size":1154,"mtime":1669658464601,"results":"27","hashOfConfig":"22"},{"size":3086,"mtime":1669658464602,"results":"28","hashOfConfig":"22"},{"size":1821,"mtime":1669658464591,"results":"29","hashOfConfig":"22"},{"size":505,"mtime":1669658861586,"results":"30","hashOfConfig":"22"},{"size":2397,"mtime":1669658464596,"results":"31","hashOfConfig":"22"},{"size":658,"mtime":1669658464593,"results":"32","hashOfConfig":"22"},{"size":3051,"mtime":1669658464598,"results":"33","hashOfConfig":"22"},{"size":1383,"mtime":1669658464599,"results":"34","hashOfConfig":"22"},{"size":3546,"mtime":1669658464597,"results":"35","hashOfConfig":"22"},{"size":9643,"mtime":1669658464594,"results":"36","hashOfConfig":"22"},{"size":176,"mtime":1669658464612,"results":"37","hashOfConfig":"22"},{"size":229,"mtime":1669658464613,"results":"38","hashOfConfig":"22"},{"size":296,"mtime":1669658464612,"results":"39","hashOfConfig":"22"},{"size":1781,"mtime":1669658464592,"results":"40","hashOfConfig":"22"},{"size":2749,"mtime":1669658464595,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"d2lgj7",{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68"},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\index.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\reportWebVitals.ts",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\App.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\login_page\\LoginPage.tsx",["106"],[],"import React, { useEffect, useState } from 'react'\r\nimport '../styles/login_page/login_page.css'\r\nimport {FaMoneyBillWave} from 'react-icons/fa'\r\nimport { RiDatabase2Fill } from 'react-icons/ri'\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport {LoginFormType, SignFormType }from '../../types/types'\r\nimport Modal from '../common/Modal';\r\nimport SignupForm from './SignupForm';\r\nimport LoginForm from './LoginForm'\r\n\r\n\r\ntype props = {\r\n    setAccessToken:(token:string)=>void\r\n    token:string\r\n}   \r\n\r\nconst LoginPage = ({setAccessToken,token}:props) => {\r\n  const [loginForm, setLoginForm]  = useState<LoginFormType>({}as LoginFormType)\r\n  const [signupForm,setSignupForm]  = useState<SignFormType>({password:'' ,repeatPassword:''}as SignFormType)\r\n  const [modalTrigger,setModalTrigger] = useState<boolean> (false)\r\n  const navigate = useNavigate()\r\n\r\n  //check if user is Logged\r\n  if(token!=='') navigate('/logged/home',{replace: true})\r\n\r\n\r\n\r\nconst closeSignupModal= () =>{\r\n        setSignupForm({...signupForm, errorMessage:''})\r\n        setModalTrigger(false)\r\n  }\r\n\r\n\r\nconst handleLogin = async (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{\r\n    e.preventDefault()\r\n    try{\r\n        const rawResponse = await fetch(`${process.env.REACT_APP_PUBLIC_URL_API}/auth/login`, {\r\n            method: 'POST',\r\n            headers: {\r\n              'Accept': 'application/json',\r\n              'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(loginForm)\r\n          });\r\n          \r\n          const content = await rawResponse.json()\r\n          if(rawResponse.ok){\r\n          setAccessToken(content.accessToken)\r\n          navigate('/logged/home')\r\n            }\r\n        else{\r\n          \r\n            setLoginForm({...loginForm, errorMessage:content.message})\r\n            throw new Error(content.message)\r\n           }\r\n        }\r\n        catch(err){\r\n            console.log(err)\r\n            navigate('/')\r\n        }\r\n        }\r\n\r\n\r\nconst handleSignup = async (e:React.MouseEvent<HTMLButtonElement, MouseEvent>) =>{\r\n            e.preventDefault()\r\n            if(signupForm.password!==signupForm.repeatPassword){\r\n              setSignupForm({...signupForm, errorMessage:'Passwords fields do not match'})\r\n              return\r\n            }\r\n            try{\r\n                const rawResponse = await fetch(`${process.env.REACT_APP_PUBLIC_URL_API}/user/signup`, {\r\n                    method: 'POST',\r\n                    headers: {\r\n                      'Accept': 'application/json',\r\n                      'Content-Type': 'application/json'\r\n                    },\r\n                    body: JSON.stringify(signupForm)\r\n                  }); \r\n                  if(rawResponse.ok){\r\n               \r\n                  setModalTrigger(false)\r\n                  navigate('/')\r\n                }\r\n                else{\r\n                    const content = await rawResponse.json()\r\n                    setSignupForm({...signupForm, errorMessage:content.message})\r\n                    throw new Error(content.message)\r\n                }\r\n                }\r\n                catch(err){\r\n                    console.log(err)\r\n                }\r\n        }\r\n         \r\n        \r\n\r\n\r\n\r\n    return(\r\n     <div className=\"login-page\">\r\n         <section className=\"login-page__section-header\">\r\n        <div className='title'> \r\n            <h1 className='title__title'>Alkemy</h1>\r\n            <RiDatabase2Fill  className='title__icon'></RiDatabase2Fill>\r\n        </div>\r\n\r\n         <p className='login-page__section-text'>Keep track of your <span className='login-page__span'>finances</span></p>\r\n         <button onClick={()=>setModalTrigger(true)} className='login-page__signup-button login-page__signup-button--hover'>Sign Up</button>\r\n        </section>\r\n\r\n         <section className=\"login-page__section-login\">\r\n            <LoginForm  handleLogin={(e)=>handleLogin(e)} UpdateForm={(payload:LoginFormType ) => setLoginForm({...payload ,errorMessage:''}) } \r\n            formFields={loginForm}></LoginForm>\r\n         </section>\r\n        <FaMoneyBillWave  className='login-page__bottom-bill'></FaMoneyBillWave>\r\n        <FaMoneyBillWave  className='login-page__top-bill'></FaMoneyBillWave>\r\n        <FaMoneyBillWave  className='login-page__middle-bill'></FaMoneyBillWave>\r\n        <Modal  trigger={modalTrigger}>\r\n             <SignupForm \r\n             closeSignup={()=>closeSignupModal()}\r\n             UpdateForm={(payload:SignFormType)=>setSignupForm({...payload ,errorMessage:''})} \r\n             formFields={signupForm} handleSignup={(e)=>handleSignup(e)}></SignupForm>\r\n        </Modal>\r\n    </div>)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default LoginPage","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\LoggedPage.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\login_page\\LoginForm.tsx",["107"],[],"import '../styles/login_page/login_form.css'\r\nimport React from 'react';\r\nimport {LoginFormType }from'../../types/types'\r\n\r\n\r\ntype props = {\r\n    UpdateForm: (payload:LoginFormType)=>void\r\n    formFields: LoginFormType\r\n    handleLogin:(e:any)=>void\r\n}\r\n\r\n\r\n\r\nconst LoginForm =({handleLogin,UpdateForm,formFields}:props) =>{\r\n\r\n\r\n\r\n\r\n    return(\r\n    <form className=\"login-form\">\r\n        <label className='login-form__label' >Email</label>\r\n        <input name='email' onChange={(e)=>UpdateForm({...formFields, email: e.currentTarget.value})} \r\n        className='login-form__input' type=\"text\"  />\r\n        <label className='login-form__label' >Password </label>\r\n        <input name='password' onChange={(e)=>UpdateForm({...formFields, password: e.currentTarget.value})}\r\n         className='login-form__input' type=\"password\" />\r\n         <div className='login-form__button-container'>\r\n        <button onClick={handleLogin} className='login-form__login-button login-form__login-button--hover'>Log in</button>\r\n        <p className='login-form__error'>{formFields.errorMessage}</p>\r\n        </div>\r\n    </form>\r\n    )\r\n}\r\n\r\nexport default LoginForm;","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\login_page\\SignupForm.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\NavBar.tsx",["108"],[],"import React from \"react\";\r\nimport '../styles/logged_page/nav_bar.css'\r\nimport { RiDatabase2Fill } from 'react-icons/ri'\r\nimport {MdLogout} from 'react-icons/md'\r\nimport {useNavigate } from \"react-router-dom\";\r\n\r\n\r\ntype props = {\r\n\r\n    setAccessToken: (payload:string)=>any\r\n    token:string\r\n}\r\n\r\n\r\nconst NavBar = ({setAccessToken,token}:props) => {\r\nconst navigate = useNavigate()\r\n\r\nconst resetToken =() =>{\r\n    setAccessToken('')\r\n    navigate('/')\r\n}\r\nconst logout=(e: React.MouseEvent<HTMLElement, MouseEvent>)=>{\r\n    e.preventDefault()\r\n    fetch(`${process.env.REACT_APP_PUBLIC_URL_API}/auth/session'`, {method:'POST',\r\n    headers:{\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization': `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({logout:true})\r\n\r\n}).then(()=>{setTimeout(resetToken,200)}).catch(err => console.log(err))\r\n    \r\n}\r\n \r\n    return (\r\n    <div className=\"nav-bar\">\r\n        <div className=\"logo\">\r\n            <p className=\"logo__text\">Alke</p>\r\n            <span className=\"logo__span\">My</span>\r\n            <RiDatabase2Fill className=\"logo__icon\"></RiDatabase2Fill>\r\n            <span className=\"logo__span\">Finances</span>\r\n        </div>\r\n        <div className=\"links\" >\r\n                <div onClick={()=>navigate('/logged/home')} className=\"links__link links__link--hover\"> <p className=\"links__text\" >Home</p></div>\r\n                 <div onClick={()=>navigate('/logged/crud')} className=\"links__link links__link--hover\"><p className=\"links__text\" >Crud</p></div>\r\n                 <div onClick={(e)=>logout(e)} className=\"links__logout\"><button  className=\"links__logout-button\">Log out</button><MdLogout className=\"links__logout-icon\"></MdLogout></div>\r\n        </div>\r\n     \r\n    </div>)\r\n}\r\n\r\n\r\nexport default NavBar;","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\common\\Modal.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\HomePage.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\CrudPage.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\RecordTable.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\TotalBalance.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\home_page\\NewRecordForm.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\CrudRecordTable.tsx",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\helper_functions\\formatDate.ts",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\helper_functions\\toCurrency.ts",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\helper_functions\\getCategories.ts",[],[],"C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\ConfirmDeleteForm.tsx",["109"],[],"import React from \"react\"\r\nimport FormatDate from \"../../../helper_functions/formatDate\"\r\nimport { USDConverter } from \"../../../helper_functions/toCurrency\"\r\nimport { RecordFormType } from \"../../../types/types\"\r\nimport '../../styles/logged_page/crud_page/confirm_delete_form.css'\r\n\r\ntype props = {\r\n    close:()=>void\r\n    handleDelete:(e: any)=>void\r\n    formData:RecordFormType\r\n}\r\n\r\n\r\n\r\nconst ConfirmDeleteForm = ({handleDelete,close,formData}:props) =>{\r\n\r\n\r\n\r\n\r\n\r\nreturn(\r\n<form className=\"delete-form\">\r\n<h2 className=\"delete-form__header\">Confirm delete</h2>\r\n<label className=\"delete-form__label\">Concept</label>\r\n<input disabled type=\"text\" className=\"delete-form__input\" defaultValue={formData.concept}/>\r\n<label className=\"delete-form__label\">Amount</label>\r\n<input disabled type=\"text\" className=\"delete-form__input\" defaultValue={USDConverter(formData.amount)}/>\r\n<label className=\"delete-form__label\">Type</label> \r\n<input disabled type=\"text\" className=\"delete-form__input\" defaultValue={formData.type}/>\r\n<label className=\"delete-form__label\">Category</label>\r\n<input disabled type=\"text\" className=\"delete-form__input\" defaultValue={formData.category}/>\r\n<label className=\"delete-form__label\">Date</label> \r\n<input disabled type=\"date\" className=\"delete-form__input\" defaultValue={FormatDate(formData.date)}/>                  \r\n<p className='delete-form__error'>{formData.errorMessage}</p>\r\n<div className='new-record-form__button-container'>\r\n<button onClick={(e)=>handleDelete(e)} className='new-record-form__accept-button new-record-form__accept-button--hover'>Accept</button>\r\n<button onClick={close} className='new-record-form__cancel-button new-record-form__cancel-button--hover'>Cancel</button>\r\n</div>\r\n</form>)\r\n}\r\n\r\n\r\nexport default ConfirmDeleteForm;","C:\\Users\\noah1\\Documents\\GitHub\\Finances_app\\src\\components\\logged_page\\crud_page\\EditForm.tsx",[],[],{"ruleId":"110","severity":1,"message":"111","line":1,"column":17,"nodeType":"112","messageId":"113","endLine":1,"endColumn":26},{"ruleId":"114","severity":1,"message":"115","line":9,"column":20,"nodeType":"116","messageId":"117","endLine":9,"endColumn":23,"suggestions":"118"},{"ruleId":"114","severity":1,"message":"115","line":10,"column":39,"nodeType":"116","messageId":"117","endLine":10,"endColumn":42,"suggestions":"119"},{"ruleId":"114","severity":1,"message":"115","line":9,"column":22,"nodeType":"116","messageId":"117","endLine":9,"endColumn":25,"suggestions":"120"},"@typescript-eslint/no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-explicit-any","Unexpected any. Specify a different type.","TSAnyKeyword","unexpectedAny",["121","122"],["123","124"],["125","126"],{"messageId":"127","fix":"128","desc":"129"},{"messageId":"130","fix":"131","desc":"132"},{"messageId":"127","fix":"133","desc":"129"},{"messageId":"130","fix":"134","desc":"132"},{"messageId":"127","fix":"135","desc":"129"},{"messageId":"130","fix":"136","desc":"132"},"suggestUnknown",{"range":"137","text":"138"},"Use `unknown` instead, this will force you to explicitly, and safely assert the type is correct.","suggestNever",{"range":"137","text":"139"},"Use `never` instead, this is useful when instantiating generic type parameters that you don't need to know the type of.",{"range":"140","text":"138"},{"range":"140","text":"139"},{"range":"141","text":"138"},{"range":"141","text":"139"},[239,242],"unknown","never",[271,274],[342,345]]